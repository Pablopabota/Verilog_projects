$date
	Sun Sep 19 20:58:52 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module data_delay_tb $end
$var wire 64 ! o_Dout [63:0] $end
$var reg 16 " i_Din [15:0] $end
$var reg 1 # i_clk $end
$var reg 1 $ i_rst $end
$scope module uut $end
$var wire 16 % i_Din [15:0] $end
$var wire 1 # i_clk $end
$var wire 1 $ i_rst $end
$var wire 64 & o_Dout [63:0] $end
$scope begin genblk1[0] $end
$scope begin genblk2 $end
$scope module u_dff $end
$var wire 16 ' i_Din [15:0] $end
$var wire 1 # i_clk $end
$var wire 1 $ i_rst $end
$var reg 16 ( o_Dout [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope begin genblk3 $end
$scope module u_dff $end
$var wire 16 ) i_Din [15:0] $end
$var wire 1 # i_clk $end
$var wire 1 $ i_rst $end
$var reg 16 * o_Dout [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope begin genblk3 $end
$scope module u_dff $end
$var wire 16 + i_Din [15:0] $end
$var wire 1 # i_clk $end
$var wire 1 $ i_rst $end
$var reg 16 , o_Dout [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope begin genblk3 $end
$scope module u_dff $end
$var wire 16 - i_Din [15:0] $end
$var wire 1 # i_clk $end
$var wire 1 $ i_rst $end
$var reg 16 . o_Dout [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
bx '
b0 &
bx %
0$
0#
bx "
b0 !
$end
#1000
b11010100100100 "
b11010100100100 %
b11010100100100 '
1#
#2000
0#
#3000
b101111010000001 "
b101111010000001 %
b101111010000001 '
1#
#4000
0#
#5000
b1101011000001001 )
b1101011000001001 !
b1101011000001001 &
b1101011000001001 (
b1101011000001001 "
b1101011000001001 %
b1101011000001001 '
1$
1#
#6000
0#
#7000
b101011001100011 )
b1101011000001001 +
b101011001100011 (
b11010110000010010101011001100011 !
b11010110000010010101011001100011 &
b1101011000001001 *
b101011001100011 "
b101011001100011 %
b101011001100011 '
1#
#8000
0#
#9000
b1101011000001001 -
b101011001100011 +
b111101100001101 )
b1101011000001001 ,
b101011001100011 *
b110101100000100101010110011000110111101100001101 !
b110101100000100101010110011000110111101100001101 &
b111101100001101 (
b111101100001101 "
b111101100001101 %
b111101100001101 '
1#
#10000
0#
#11000
b1001100110001101 )
b111101100001101 +
b101011001100011 -
b1001100110001101 (
b111101100001101 *
b101011001100011 ,
b1101011000001001010101100110001101111011000011011001100110001101 !
b1101011000001001010101100110001101111011000011011001100110001101 &
b1101011000001001 .
b1001100110001101 "
b1001100110001101 %
b1001100110001101 '
1#
#12000
0#
#13000
b111101100001101 -
b1001100110001101 +
b1000010001100101 )
b101011001100011 .
b111101100001101 ,
b1001100110001101 *
b101011001100011011110110000110110011001100011011000010001100101 !
b101011001100011011110110000110110011001100011011000010001100101 &
b1000010001100101 (
b1000010001100101 "
b1000010001100101 %
b1000010001100101 '
1#
#14000
0#
#15000
b1000010001100101 +
b1001100110001101 -
b1000010001100101 *
b1001100110001101 ,
b111101100001101100110011000110110000100011001011000010001100101 !
b111101100001101100110011000110110000100011001011000010001100101 &
b111101100001101 .
1#
