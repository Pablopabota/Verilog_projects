$date
	Thu Sep 02 03:05:03 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module fifo_counter_tb $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 2 " pointer_in [1:0] $end
$var wire 2 # pointer_out [1:0] $end
$var wire 1 $ pop $end
$var wire 1 % push $end
$var wire 1 & rst $end
$var wire 1 ' pndng $end
$var wire 2 ( nxt_state_out [1:0] $end
$var wire 2 ) nxt_state_in [1:0] $end
$var wire 2 * nxt_state_count [1:0] $end
$var wire 1 + full $end
$var wire 1 , e $end
$var wire 1 - d $end
$var wire 2 . count [1:0] $end
$var wire 1 / c $end
$var reg 2 0 state_count [1:0] $end
$var reg 2 1 state_in [1:0] $end
$var reg 2 2 state_out [1:0] $end
$scope module count_state $end
$var wire 2 3 A [1:0] $end
$var wire 2 4 B [1:0] $end
$var wire 1 5 carryin $end
$var wire 1 , carryout $end
$var wire 2 6 Sum [1:0] $end
$var wire 3 7 C [2:0] $end
$upscope $end
$scope module nxt_state_in_gen $end
$var wire 2 8 A [1:0] $end
$var wire 2 9 B [1:0] $end
$var wire 1 % carryin $end
$var wire 1 / carryout $end
$var wire 2 : Sum [1:0] $end
$var wire 3 ; C [2:0] $end
$upscope $end
$scope module nxt_state_out_gen $end
$var wire 2 < A [1:0] $end
$var wire 2 = B [1:0] $end
$var wire 1 $ carryin $end
$var wire 1 - carryout $end
$var wire 2 > Sum [1:0] $end
$var wire 3 ? C [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
05
b0 4
b0 3
b0 2
b0 1
b0 0
0/
b0 .
0-
0,
0+
b0 *
b0 )
b0 (
0'
0&
0%
0$
b0 #
b0 "
0!
$end
#10
1!
#20
0!
#30
b1 *
b1 6
b1 )
b1 :
b1 3
b1 ;
1%
1!
#40
0!
#50
1'
b1 .
b1 0
b1 "
b1 1
b1 8
b0 *
b0 6
b1 )
b1 :
1!
b0 3
b0 ;
0%
1&
#60
0!
#70
0'
b0 .
b0 0
b11 *
b11 6
b1 (
b1 >
b11 4
b1 ?
1$
1!
#80
0!
#90
1'
b11 .
b11 0
b10 )
b10 :
b1 *
b1 6
b0 (
b0 >
b1 3
b11 ;
1%
1!
b0 4
b0 ?
0$
#100
0!
#110
b1 .
b1 0
b10 "
b10 1
b10 8
b0 *
b0 6
b10 )
b10 :
1!
b0 3
b0 ;
0%
#120
0!
#130
0'
b0 .
b0 0
1!
#140
0!
#150
b1 *
b1 6
b11 )
b11 :
b1 3
b1 ;
1%
1!
#160
0!
#170
1'
b1 .
b1 0
b11 "
b11 1
b11 8
b0 *
b0 6
b11 )
b11 :
1!
b0 3
b0 ;
0%
#180
0!
#190
0'
b0 .
b0 0
1!
#200
0!
#210
1/
b1 *
b1 6
b0 )
b0 :
b1 3
b111 ;
1%
1!
#220
0!
#230
1'
b1 .
b1 0
b0 "
b0 1
b0 8
0/
b0 *
b0 6
b0 )
b0 :
1!
b0 3
b0 ;
0%
#240
0!
#250
0'
b0 .
b0 0
1!
#260
0!
#270
b1 *
b1 6
b1 )
b1 :
b1 3
b1 ;
1%
1!
#280
0!
#290
1'
b1 .
b1 0
b1 "
b1 1
b1 8
b0 *
b0 6
b1 )
b1 :
1!
b0 3
b0 ;
0%
#300
0!
#310
0'
b0 .
b0 0
1!
#320
0!
#330
b1 *
b1 6
b10 )
b10 :
b1 3
b11 ;
1%
1!
#340
0!
#350
1'
b1 .
b1 0
b10 "
b10 1
b10 8
b11 *
b11 6
b1 (
b1 >
b10 )
b10 :
1!
b11 4
b1 ?
1$
b0 3
b0 ;
0%
#360
0!
#370
b1 #
b1 2
b1 <
b11 .
b11 0
b0 *
b0 6
b1 (
b1 >
1!
b0 4
b0 ?
0$
#380
0!
#390
0'
b0 .
b0 0
b1 *
b1 6
b11 )
b11 :
b1 3
b1 ;
1%
1!
#400
0!
#410
1'
b1 .
b1 0
b11 "
b11 1
b11 8
b0 *
b0 6
b11 )
b11 :
1!
b0 3
b0 ;
0%
#420
0!
#430
0'
b0 .
b0 0
1!
#440
0!
#450
1/
b1 *
b1 6
b0 )
b0 :
b1 3
b111 ;
1%
1!
#460
0!
#470
1'
b1 .
b1 0
b0 "
b0 1
b0 8
0/
b0 *
b0 6
b0 )
b0 :
1!
b0 3
b0 ;
0%
#480
0!
#490
0'
b0 .
b0 0
b11 *
b11 6
b10 (
b10 >
b11 4
b11 ?
1$
1!
#500
0!
